"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
"""
import sys
import os
sys.path.append('src')

import pandas as pd
from pathlib import Path
import shutil

# –ü—É—Ç–∏
data_dir = Path("data")
processed_dir = data_dir / "processed"
raw_dir = data_dir / "raw"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
processed_dir.mkdir(parents=True, exist_ok=True)
raw_dir.mkdir(parents=True, exist_ok=True)

print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...")
print("="*60)

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
print("\n1. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
for file_path in processed_dir.glob("*.csv"):
    file_path.unlink()
    print(f"   –£–¥–∞–ª–µ–Ω: {file_path.name}")

for file_path in processed_dir.glob("*.pkl"):
    file_path.unlink()
    print(f"   –£–¥–∞–ª–µ–Ω: {file_path.name}")

# –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ data_loader
print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π...")
try:
    from data_loader import EnhancedDataLoader
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
    loader = EnhancedDataLoader()
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\n3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞...")
    train_df, test_df = loader.prepare_final_dataset()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    loader.save_processed_data(train_df, test_df)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    train_path = processed_dir / "train_data.csv"
    test_path = processed_dir / "test_data.csv"
    
    if train_path.exists():
        train_check = pd.read_csv(train_path)
        print(f"   ‚úÖ train_data.csv: {len(train_check)} —Å—Ç—Ä–æ–∫")
        print(f"      –ö–æ–ª–æ–Ω–∫–∏: {train_check.columns.tolist()}")
        if 'label' in train_check.columns:
            print(f"      –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤:")
            print(f"      {train_check['label'].value_counts()}")
    
    if test_path.exists():
        test_check = pd.read_csv(test_path)
        print(f"\n   ‚úÖ test_data.csv: {len(test_check)} —Å—Ç—Ä–æ–∫")
        print(f"      –ö–æ–ª–æ–Ω–∫–∏: {test_check.columns.tolist()}")
    
    label_encoder_path = processed_dir / "label_encoder.pkl"
    if label_encoder_path.exists():
        print(f"\n   ‚úÖ label_encoder.pkl —Å–æ–∑–¥–∞–Ω")
    
    print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ:")
    print("   python production_train.py")
    
except Exception as e:
    print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
